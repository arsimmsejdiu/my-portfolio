{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { DocumentTypeDef } from \"contentlayer/core\";\nimport {\n  ComputedFields,\n  defineDocumentType,\n  makeSource,\n} from \"contentlayer/source-files\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkGfm from \"remark-gfm\";\n\ninterface DocType extends DocumentTypeDef {\n  _raw: {\n    flattenedPath: string;\n  };\n}\n\nconst computedFields: ComputedFields<\"Doc\"> = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) => `/${doc._raw?.flattenedPath}`,\n  },\n  slugAsParams: {\n    type: \"string\",\n    resolve: (doc) => doc._raw?.flattenedPath.split(\"/\").slice(1).join(\"/\"),\n  },\n};\n\nexport const Doc = defineDocumentType(() => ({\n  name: \"Doc\",\n  filePathPattern: `posts/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    date: { type: \"string\", required: true },\n    author: { type: \"string\", required: false },\n    role: { type: \"string\", required: false },\n  },\n  computedFields,\n}));\n\nexport default makeSource({\n  contentDirPath: \"src/content\",\n  documentTypes: [Doc],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      [\n        // @ts-ignore\n        rehypePrettyCode as unknown as import(\"rehype\").Plugin<any[], any, any>,\n        ,\n        {\n          theme: \"github-dark\",\n          onVisitLine(node: any) {\n            if (node.children.length === 0) {\n              node.children = [{ type: \"text\", value: \" \" }];\n            }\n          },\n          onVisitHighlightedLine(node: any) {\n            node.properties.className = [\"line-highlighted\"]\n          },\n          onVisitHighlightedWord(node: any) {\n            node.properties.className = [\"word-highlighted\"]\n          }\n        },\n      ],\n    ],\n  },\n});\n"],
  "mappings": ";AACA;AAAA,EAEE;AAAA,EACA;AAAA,OACK;AAEP,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAQtB,IAAM,iBAAwC;AAAA,EAC5C,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,MAAM,aAAa;AAAA,EAC/C;AAAA,EACA,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,MAAM,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACxE;AACF;AAEO,IAAM,MAAM,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,QAAQ,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC1C,MAAM,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,EAC1C;AAAA,EACA;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,GAAG;AAAA,EACnB,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA;AAAA,QAEE;AAAA,QACA;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,YAAY,MAAW;AACrB,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAC/C;AAAA,UACF;AAAA,UACA,uBAAuB,MAAW;AAChC,iBAAK,WAAW,YAAY,CAAC,kBAAkB;AAAA,UACjD;AAAA,UACA,uBAAuB,MAAW;AAChC,iBAAK,WAAW,YAAY,CAAC,kBAAkB;AAAA,UACjD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
